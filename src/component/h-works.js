'use client'; // If you're using App Router

import { useState } from 'react';
// import './HowItWorks.css'; // Or wherever your styles live

const tabs = [
  {
    id: 'tab1',
	icons: `<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_1_640)"><path d="M30.5843 32.0073V7.57527H25.4324V0L8.56773 4.72847V11.5002H3.41575V32.0073H1.32324V34H32.6768V32.0073H30.5843ZM5.40842 32.0073V13.4929H13.7771V32.0073H5.40842ZM15.7698 32.0073V11.5002H10.5603V6.23932L23.4396 2.62827L23.4108 32.0074H15.7698V32.0073ZM25.4323 32.0073V9.56794H28.5915V32.0073H25.4323Z"/><path d="M8.59644 16.6396H10.5891V20.6476H8.59644V16.6396Z"/><path d="M8.59644 23.96H10.5891V27.968H8.59644V23.96Z"/><path d="M18.2302 16.6396H20.2229V20.6476H18.2302V16.6396Z"/><path d="M18.2302 9.31982H20.2229V13.3278H18.2302V9.31982Z"/><path d="M18.2302 23.96H20.2229V27.968H18.2302V23.96Z"/></g><defs><clipPath id="clip0_1_640"><rect width="34" height="34"/></clipPath></defs></svg>`,
    title: 'Discover Property',
    content: 'Whether youâ€™re searching for the perfect commercial space ...',
  },
  {
    id: 'tab2',
	icons: `<svg width="45" height="45" viewBox="0 0 45 45" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path d="M16.0709 11.8815C15.3528 11.8815 14.7573 11.286 14.7573 10.568V5.31359C14.7573 4.59549 15.3528 4 16.0709 4C16.789 4 17.3845 4.59549 17.3845 5.31359V10.568C17.3845 11.286 16.789 11.8815 16.0709 11.8815Z"/>
								<path d="M30.0825 11.8815C29.3644 11.8815 28.7689 11.286 28.7689 10.568V5.31359C28.7689 4.59549 29.3644 4 30.0825 4C30.8006 4 31.3961 4.59549 31.3961 5.31359V10.568C31.3961 11.286 30.8006 11.8815 30.0825 11.8815Z"/>
								<path d="M16.9466 27.207C16.719 27.207 16.4913 27.1545 16.2811 27.0669C16.0534 26.9794 15.8783 26.8568 15.7031 26.6991C15.3879 26.3663 15.1952 25.9285 15.1952 25.4556C15.1952 25.2279 15.2477 25.0002 15.3353 24.79C15.4229 24.5799 15.5455 24.3872 15.7031 24.2121C15.8783 24.0544 16.0534 23.9318 16.2811 23.8443C16.9116 23.5815 17.6998 23.7217 18.1902 24.2121C18.5054 24.5448 18.6981 25.0002 18.6981 25.4556C18.6981 25.5607 18.6806 25.6833 18.6631 25.8059C18.6456 25.911 18.6105 26.0161 18.558 26.1211C18.523 26.2262 18.4704 26.3313 18.4004 26.4364C18.3478 26.524 18.2602 26.6115 18.1902 26.6991C17.8574 27.0144 17.402 27.207 16.9466 27.207Z"/>
								<path d="M23.0766 27.2065C22.849 27.2065 22.6213 27.154 22.4111 27.0664C22.1834 26.9788 22.0083 26.8562 21.8331 26.6986C21.5179 26.3658 21.3252 25.928 21.3252 25.4551C21.3252 25.2274 21.3777 24.9997 21.4653 24.7895C21.5529 24.5793 21.6755 24.3867 21.8331 24.2115C22.0083 24.0539 22.1834 23.9313 22.4111 23.8437C23.0416 23.5635 23.8298 23.7211 24.3202 24.2115C24.6354 24.5443 24.8281 24.9997 24.8281 25.4551C24.8281 25.5602 24.8106 25.6828 24.7931 25.8054C24.7756 25.9105 24.7405 26.0155 24.688 26.1206C24.653 26.2257 24.6004 26.3308 24.5304 26.4359C24.4778 26.5235 24.3902 26.611 24.3202 26.6986C23.9874 27.0139 23.532 27.2065 23.0766 27.2065Z"/>
								<path d="M29.2068 27.2065C28.9791 27.2065 28.7514 27.154 28.5412 27.0664C28.3135 26.9788 28.1384 26.8562 27.9632 26.6986C27.8932 26.611 27.8231 26.5235 27.7531 26.4359C27.683 26.3308 27.6305 26.2257 27.5954 26.1206C27.5429 26.0155 27.5079 25.9105 27.4904 25.8054C27.4728 25.6828 27.4553 25.5602 27.4553 25.4551C27.4553 24.9997 27.648 24.5443 27.9632 24.2115C28.1384 24.0539 28.3135 23.9313 28.5412 23.8437C29.1893 23.5635 29.9599 23.7211 30.4503 24.2115C30.7656 24.5443 30.9582 24.9997 30.9582 25.4551C30.9582 25.5602 30.9407 25.6828 30.9232 25.8054C30.9057 25.9105 30.8707 26.0155 30.8181 26.1206C30.7831 26.2257 30.7305 26.3308 30.6605 26.4359C30.6079 26.5235 30.5204 26.611 30.4503 26.6986C30.1175 27.0139 29.6622 27.2065 29.2068 27.2065Z"/>
								<path d="M16.9466 33.3368C16.719 33.3368 16.4913 33.2844 16.2811 33.1969C16.0709 33.1093 15.8783 32.9865 15.7031 32.8289C15.3879 32.4961 15.1952 32.0407 15.1952 31.5853C15.1952 31.3577 15.2477 31.13 15.3353 30.9198C15.4229 30.6921 15.5455 30.4996 15.7031 30.342C16.3511 29.6939 17.5421 29.6939 18.1902 30.342C18.5054 30.6748 18.6981 31.13 18.6981 31.5853C18.6981 32.0407 18.5054 32.4961 18.1902 32.8289C17.8574 33.1441 17.402 33.3368 16.9466 33.3368Z"/>
								<path d="M23.0766 33.3368C22.6213 33.3368 22.1659 33.1441 21.8331 32.8289C21.5179 32.4961 21.3252 32.0407 21.3252 31.5853C21.3252 31.3577 21.3777 31.13 21.4653 30.9198C21.5529 30.6921 21.6755 30.4996 21.8331 30.342C22.4812 29.6939 23.6721 29.6939 24.3202 30.342C24.4778 30.4996 24.6004 30.6921 24.688 30.9198C24.7756 31.13 24.8281 31.3577 24.8281 31.5853C24.8281 32.0407 24.6354 32.4961 24.3202 32.8289C23.9874 33.1441 23.532 33.3368 23.0766 33.3368Z"/>
								<path d="M29.2068 33.3365C28.7514 33.3365 28.296 33.1438 27.9632 32.8286C27.8056 32.6709 27.683 32.4783 27.5954 32.2506C27.5079 32.0404 27.4553 31.8127 27.4553 31.585C27.4553 31.3573 27.5079 31.1296 27.5954 30.9195C27.683 30.6918 27.8056 30.4991 27.9632 30.3415C28.3661 29.9387 28.9791 29.746 29.5396 29.8686C29.6622 29.8861 29.7672 29.9211 29.8723 29.9737C29.9774 30.0087 30.0825 30.0613 30.1876 30.1313C30.2752 30.1839 30.3627 30.2714 30.4503 30.3415C30.7656 30.6743 30.9582 31.1297 30.9582 31.585C30.9582 32.0404 30.7656 32.4958 30.4503 32.8286C30.1175 33.1438 29.6622 33.3365 29.2068 33.3365Z"/>
								<path d="M37.964 19.0447H8.18932C7.47123 19.0447 6.87573 18.4492 6.87573 17.7311C6.87573 17.013 7.47123 16.4175 8.18932 16.4175H37.964C38.6821 16.4175 39.2776 17.013 39.2776 17.7311C39.2776 18.4492 38.6821 19.0447 37.964 19.0447Z"/>
								<path d="M30.0825 41.656H16.0709C9.67805 41.656 6 37.978 6 31.5852V16.6978C6 10.305 9.67805 6.62695 16.0709 6.62695H30.0825C36.4753 6.62695 40.1533 10.305 40.1533 16.6978V31.5852C40.1533 37.978 36.4753 41.656 30.0825 41.656ZM16.0709 9.25413C11.0617 9.25413 8.62718 11.6887 8.62718 16.6978V31.5852C8.62718 36.5943 11.0617 39.0288 16.0709 39.0288H30.0825C35.0916 39.0288 37.5262 36.5943 37.5262 31.5852V16.6978C37.5262 11.6887 35.0916 9.25413 30.0825 9.25413H16.0709Z"/>
							</svg>`,
    title: 'Schedule to Visit',
    content: 'Easily book a property visit at your convenience ...',
  },
  {
    id: 'tab3',
	icons: `<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_1_648)"><path d="M30.6496 6.02048C30.4664 3.65538 28.4848 1.78662 26.0735 1.78662H4.59146C2.05972 1.78662 0 3.84634 0 6.37808V27.6217C0 30.1535 2.05972 32.2132 4.59146 32.2132H29.4086C31.9403 32.2132 34.0001 30.1535 34.0001 27.6217V10.4401C34 8.33847 32.5801 6.56342 30.6496 6.02048ZM4.59146 3.93154H26.0736C27.2408 3.93154 28.2191 4.75338 28.4618 5.84869H4.59146C3.69254 5.84869 2.85381 6.10936 2.14492 6.55765V6.37808C2.14492 5.02906 3.24244 3.93154 4.59146 3.93154ZM29.4085 30.0683H4.59146C3.24244 30.0683 2.14492 28.9708 2.14492 27.6217V10.4401C2.14492 9.09107 3.24244 7.99354 4.59146 7.99354H29.4086C30.7576 7.99354 31.8552 9.09107 31.8552 10.4401V14.1828H25.0165C22.3065 14.1828 20.1018 16.3876 20.1018 19.0976C20.1018 21.8075 22.3066 24.0123 25.0165 24.0123H31.8551V27.6217C31.8551 28.9708 30.7576 30.0683 29.4085 30.0683ZM31.8551 21.8674H25.0165C23.4892 21.8674 22.2467 20.6249 22.2467 19.0976C22.2467 17.5703 23.4892 16.3277 25.0165 16.3277H31.8551V21.8674Z"/><path d="M25.4145 20.2956C26.0312 20.2956 26.5311 19.7957 26.5311 19.1791C26.5311 18.5624 26.0312 18.0625 25.4145 18.0625C24.7979 18.0625 24.298 18.5624 24.298 19.1791C24.298 19.7957 24.7979 20.2956 25.4145 20.2956Z"/></g><defs><clipPath id="clip0_1_648"><rect width="34" height="34" fill="white"/></clipPath></defs></svg>`,
    title: 'Hassle Free Purchase',
    content: 'We handle the paperwork so you can focus on your future ...',
  },
  {
    id: 'tab4',
	icons: `<svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 8.32648V15.684C3.9989 23.4854 8.89111 30.61 16.175 33.4116C16.7628 33.6379 17.3813 33.7499 17.9999 33.7499C18.6184 33.7499 19.2369 33.6368 19.8258 33.4116L20.9178 32.9908C27.6503 30.4013 32.0009 23.8886 31.9998 16.4003V8.32648C31.9998 7.72223 31.5219 7.22565 30.9187 7.20258C26.8746 7.04547 22.7515 5.45135 18.6635 2.46637C18.2679 2.17853 17.7318 2.17853 17.3363 2.46637C13.2472 5.45135 9.12402 7.04547 5.08105 7.20258C4.47791 7.22565 4 7.72223 4 8.32648ZM6.25 9.37897C10.1699 9.00873 14.114 7.45746 17.9999 4.75592C21.8846 7.45746 25.8298 9.00873 29.7498 9.37897V16.4003C29.7509 22.9504 25.9672 28.638 20.1093 30.8902L19.0183 31.311C18.3613 31.5637 17.6373 31.5637 16.9825 31.311C10.5621 28.8412 6.2489 22.5615 6.25 15.684V9.37897Z"/><path d="M15.6962 22.6471C15.9071 22.858 16.1927 22.9767 16.4916 22.9767C16.7904 22.9767 17.076 22.858 17.287 22.6471L24.2842 15.6499C24.7236 15.2104 24.7236 14.4985 24.2842 14.0591C23.8447 13.6196 23.1328 13.6196 22.6934 14.0591L16.4916 20.2609L13.3066 17.0748C12.8672 16.6354 12.1553 16.6354 11.7158 17.0748C11.2764 17.5143 11.2764 18.2262 11.7158 18.6656L15.6962 22.6471Z"/></svg>`,
    title: 'Buyback Guarantee',
    content: 'Enjoy peace of mind with our property buyback assurance ...',
  },
];

export default function HowItWorksSection() {
  const [activeTab, setActiveTab] = useState('tab1');

  return (
    <section className="h-works">
      <div className="container">
        <div className="heading">
          <h3 className="heading-text">
            How It <strong>Works</strong>
          </h3>
        </div>

        {/* Tab navigation */}
        <div className="tab-nav">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              className={`tab-button ${activeTab === tab.id ? 'active' : ''}`}
              onClick={() => setActiveTab(tab.id)}
            >
              <div className="tab-icon">
                {/* Replace with actual SVG icons */}
                <span dangerouslySetInnerHTML={{ __html: tab.icons }}>
					
				</span>
              </div>
              {tab.title}
            </button>
          ))}
        </div>

        {/* Tab content */}
        <div className="tab-container">
          {tabs.map((tab, index) => (
            <div
              key={tab.id}
              id={tab.id}
              className={`tab-panel ${activeTab === tab.id ? 'active' : ''}`}
            >
              <div className="vb-content">
                <div className="vb-overlay-content">
                  <h3>{tab.title}</h3>
                  <p>{tab.content}</p>
                  <div className="vbc-footer">
                    <div className="slide-count">
                      {index + 1}/{tabs.length}
                    </div>
                    {tab.title}
                    <button
					className='tab-button'
                      onClick={() =>
                        setActiveTab(tabs[(index + 1) % tabs.length].id)
                      }
                    >
                      {index === tabs.length - 1 ? 'PREVIEW' : 'NEXT'}
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
